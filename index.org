#+OPTIONS: title:t date:t author:t email:t
#+OPTIONS: toc:t h:6 num:nil |:t todo:nil
#+OPTIONS: *:t -:t ::t <:t \n:t e:t creator:nil
#+OPTIONS: f:t inline:t tasks:t tex:t timestamp:t
#+OPTIONS: html-preamble:t html-postamble:nil

#+PROPERTY: header-args:R :session R:purrr :eval no :exports code :tangle yes :comments link

#+TITLE:   @@html:<span style="font-size: 60%; color: #460606;">@@R workshop for the@@html:</span>@@@@html:<span style="font-size: 75%; color: #460606;">@@ International Ornithological Congress 2018@@html:</span>@@@@html:</span>@@@@html:<br>@@Better practices in R,@@html:<br>@@no more copy-paste, no more loops
#+DATE:	   {{{time(%B %d\, %Y)}}}
#+AUTHOR:  Marie-Hélène Burle
#+EMAIL:   msb2@sfu.ca

Most of us biologists, do not learn R properly: we do not have a computing science background, we do not necessarily have access to R courses, and when we do, these seldom make use of modern tools. So, for the most part, we learn R as we go and we become good at problem solving. But do we ever become good at writing good R code?

This workshop focuses on two sets of considerations important for writing better code:

* 1. Portability, reproducibility, and readability

Code that is portable, reproducible, and readable is critical when collaborating on projects. At the start of this workshop, we will briefly go over:

- Self-contained projects for portability (as described by [[https://github.com/jennybc][Jenny Bryan]]),
- Clean sessions for reproducibility,
- Standard formatting for better readability (as suggested by [[http://hadley.nz/][Hadley Wickham]]).

The workshop material can be found [[https://prosoitos.github.io/International-Ornithological-Congress_r-workshops/r_best-practices.html][here]].

* 2. Functional programming (with the package purrr)

What do you do when you  need to apply similar code to multiple datasets or multiple variables within datasets?

You wrote some code that works on tarsus length. Now, you would like to apply it to the rest of your banding data. Or you applied code to a population and you would like to apply it to other populations. Or you wrangled the data in a file, but you have a whole folder full of similar files...

Copying and pasting code, besides being tedious, is a form of hard coding and is thus prone to errors. Loops provide a better approach, but they require a lot of code and still involve some level of repetition. Functional programming is a coding paradigm in which functions are applied to several elements in a vectorized fashion. This makes for compact code that is much easier to read and takes advantage of the vector-based nature of R. The src_R[:eval no]{purrr} package (part of the core src_R[:eval no]{tidyverse}) provides a collection of efficient and consistent tools to functional programming in R.

Most of our workshop time will focus on:

- A very brief introduction to functional programming,
- How to apply functions to several elements of a list/vector with some of the main src_R[:eval no]{purrr} functions,
- And a bonus unrelated sidetrack on a few of the less used pipes of the src_R[:eval no]{magrittr} package which are so useful when playing in the src_R[:eval no]{tidyverse}.

The workshop material (without the solutions to the short challenges) can be found [[https://prosoitos.github.io/International-Ornithological-Congress_r-workshops/r_functional-programming_no-answer.html][here]].

** Target audience

- Intermediate R users comfortable with basic data manipulation and simple functions, or
- Advanced users familiar with functional programming using the src_R[:eval no]{apply()} functions family and interested in discovering the "purrring" way.

** Software requirements

In order to make the best of this workshop, please bring a laptop with the following installed:

- the *latest* R version (if you usually run R in RStudio, make sure that you also have the latest RStudio),
- the *latest* version of the src_R[:eval no]{tidyverse} package,
- the *latest* version of the src_R[:eval no]{patchwork} package.

At the time of this writing, the src_R[:eval no]{patchwork} package is not yet on CRAN and can be installed by running:

#+BEGIN_SRC R
install.packages("devtools")                      # if you haven't installed it already
devtools::install_github("thomasp85/patchwork")
#+END_SRC

No data file is needed for this workshop[[https://prosoitos.github.io/International-Ornithological-Congress_r-workshops/r_functional-programming_with-answer.html][.]]

#+HTML: <br>

#+BEGIN_VERSE
About myself:
I am a PhD candidate in the [[https://www.sfu.ca/biology/wildberg/NewCWEPage/CWEnewTestHome.htm][Centre for Wildlife Ecology]] at [[https://www.sfu.ca/][Simon Fraser University]], 
an R Peer at the [[https://www.sfu.ca/dean-gradstudies/new_graduate_students/campus_services/research-commons.html][Research Commons]], 
a [[https://www.lib.sfu.ca/about/branches-depts/slc/slc-who/grad-facilitators/undergraduate-writing][Graduate Writing Facilitator]] at the [[https://www.lib.sfu.ca/about/branches-depts/slc][Student Learning Commons]], 
and a certified [[https://software-carpentry.org/][Software Carpentry]] and [[http://www.datacarpentry.org/][Data Carpentry]] instructor.
#+END_VERSE
